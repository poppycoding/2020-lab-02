<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xlaser4j.hr.mapper.MenuMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.xlaser4j.hr.entity.MenuDO">
        <id column="id" property="id"/>
        <result column="url" property="url"/>
        <result column="path" property="path"/>
        <result column="component" property="component"/>
        <result column="name" property="name"/>
        <result column="enabled" property="enabled"/>
        <result column="icon_cls" property="iconCls"/>
        <result column="parent_id" property="parentId"/>
    </resultMap>

    <!-- 方便前端使用这两个Meta属性,同时方便下面extends复用BaseMap -->
    <resultMap id="MetaResultMap" type="com.xlaser4j.hr.entity.MenuDO" extends="BaseResultMap">
        <result column="keep_alive" property="keepAlive"/>
        <result column="require_auth" property="requireAuth"/>
    </resultMap>

    <!-- 通过collection/association实现返回前端嵌套结构,也可以通过代码递归查询,注意extends用法,这里需要返回vo -->
    <resultMap id="NavMenuMap" type="com.xlaser4j.hr.entity.vo.NavMenuVO" extends="BaseResultMap">
        <association property="meta" javaType="com.xlaser4j.hr.entity.vo.Meta">
            <result column="keep_alive" property="keepAlive"/>
            <result column="require_auth" property="requireAuth"/>
        </association>
        <collection property="children" ofType="com.xlaser4j.hr.entity.vo.NavMenuVO">
            <result column="c_id" property="id"/>
            <result column="c_path" property="path"/>
            <result column="c_component" property="component"/>
            <result column="c_name" property="name"/>
            <result column="c_icon_cls" property="iconCls"/>
            <result column="c_enabled" property="enabled"/>
            <association property="meta" javaType="com.xlaser4j.hr.entity.vo.Meta">
                <result column="c_keep_alive" property="keepAlive"/>
                <result column="c_require_auth" property="requireAuth"/>
            </association>
        </collection>
    </resultMap>

    <resultMap id="SecurityMenuMap" type="com.xlaser4j.hr.entity.vo.SecurityMenuVO">
        <result column="url" property="url"/>
        <collection property="roles" ofType="com.xlaser4j.hr.entity.RoleDO">
            <result column="name" property="name"/>
        </collection>
    </resultMap>

    <resultMap id="MenuTreeMap" type="com.xlaser4j.hr.entity.vo.MenuVO">
        <result column="g_id" property="id"/>
        <result column="g_name" property="name"/>
        <collection property="children" ofType="com.xlaser4j.hr.entity.vo.MenuVO">
            <result column="p_id" property="id"/>
            <result column="p_name" property="name"/>
            <collection property="children" ofType="com.xlaser4j.hr.entity.vo.MenuVO">
                <result column="c_id" property="id"/>
                <result column="c_name" property="name"/>
            </collection>
        </collection>
    </resultMap>

    <!-- 根据登陆用户id获取权限列表: 这里必须返回parent.id否则映射不会自动分组,实现一对多 -->
    <select id="listMenusByHrId" resultMap="NavMenuMap">
    SELECT DISTINCT
    parent.id, parent.path, parent.component, parent.name, parent.icon_cls, parent.enabled,
    parent.keep_alive, parent.require_auth,
    child.id c_id, child.path c_path, child.component c_component, child.name c_name,
    child.icon_cls c_icon_cls, child.enabled c_enabled,
    child.keep_alive c_keep_alive, child.require_auth c_require_auth
    FROM menu child, menu parent, hr_role hr, menu_role mr
    WHERE hr.hid = #{id} AND hr.rid = mr.rid  AND mr.mid = child.id AND child.enabled = true AND child.parent_id = parent.id
    </select>

    <!-- 获取数据库请求路径,对应的角色信息,用于获取当前请求所需要的角色信息  -->
    <select id="listMenuAndRoles" resultMap="SecurityMenuMap">
     SELECT m.url, r.name
     FROM menu m, menu_role mr, role r
     WHERE m.id = mr.mid AND mr.rid = r.id
    </select>

    <!-- 获取所有资源构成的树形结构,用于新增编辑角色时的控制  -->
    <select id="listMenuTrees" resultMap="MenuTreeMap">
     SELECT
     grandpa.id  g_id, grandpa.name g_name,
     parent.id p_id, parent.name p_name,
     child.id c_id, child.name c_name
     FROM menu grandpa, menu parent, menu child
     WHERE grandpa.id = parent.parent_id AND parent.id = child.parent_id AND child.enabled = true
    </select>

</mapper>
